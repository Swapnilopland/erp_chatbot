trigger:
  - main

pool:
  vmImage: ubuntu-latest

variables:
  target-path: /var/www/html/ai

steps:
  - task: NodeTool@0
    inputs:
      versionSpec: '20.x'
    displayName: 'Install Node.js'

  - task: DownloadSecureFile@1
    name: DownloadEC2SSH
    inputs:
      secureFile: 'opland_devops.pem'

  - script: |
      mkdir -p ~/.ssh
      mv $(DownloadEC2SSH.secureFilePath) ~/.ssh/id_rsa
      chmod 600 ~/.ssh/id_rsa
    displayName: 'Prepare SSH private key'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@ec2-15-207-228-146.ap-south-1.compute.amazonaws.com "
        mkdir -p /var/www/html/backend/dev && sudo chmod -R 777 /var/www/html/backend/dev"
    displayName: 'Create destination directory if missing'

  - task: Bash@3
    inputs:
      targetType: 'inline'
      script: |
        set -e

        echo "Starting rsync to EC2..."

        rsync -avz --delete --progress \
          --no-perms --no-owner --no-group \
          --exclude='.git' \
          --exclude='.env' \
          --exclude='node_modules' \
          --exclude='vendor' \
          --exclude='storage' \
          -e "ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa" \
          ./ ubuntu@ec2-15-207-228-146.ap-south-1.compute.amazonaws.com:/var/www/html/backend/dev \
          || echo "⚠️ Rsync completed with warnings (code 23), but main files were transferred."

        echo "✅ Rsync completed."
    displayName: 'Copy artifacts to EC2 via rsync'


  - task: Bash@3
    displayName: "Run scripts on EC2"
    inputs:
      targetType: 'inline'
      script: |
        ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ubuntu@ec2-15-207-228-146.ap-south-1.compute.amazonaws.com <<'ENDSSH'
        cd /var/www/html/backend/dev
        composer install
        php artisan tenants:migrate
        php artisan tenants:seed
        ENDSSH

  - script: |
      rm -f ~/.ssh/id_rsa
    displayName: 'Delete SSH private key'
    condition: always()

  - script: |
      rm -rf *
    displayName: 'Clean up working directory'
    condition: always()
